services:
  mongodb:
    image: mongo:5.0
    container_name: shopping-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_shopping_data:/data/db
    networks:
      - shopping-network
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.runCommand('ping').ok" ]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7.0
    container_name: shopping-redis
    ports:
      - "6379:6379"
    networks:
      - shopping-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    build:
      context: ./back-end
    env_file:
      - ./back-end/.env
    container_name: backend
    ports:
      - "8080:8080"
    depends_on:
      - mongodb
    networks:
      - shopping-network
    restart: always

  frontend:
    build:
      context: ./front-end
    env_file:
      - ./front-end/.env
    container_name: frontend
    ports:
      - "5173:5173"
    depends_on:
      - backend
    command: npm run dev -- --host
    networks:
      - shopping-network
    restart : always

  nginx:
    image: nginx:latest
    container_name: shopping-nginx
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - shopping-network

volumes:
  mongo_shopping_data:


networks:
  shopping-network:
    driver: bridge
